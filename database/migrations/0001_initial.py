# Generated by Django 5.1.7 on 2025-04-09 05:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('phoneNumber', models.IntegerField()),
                ('street', models.CharField(max_length=255, null=True)),
                ('postalCode', models.CharField(max_length=20, null=True)),
                ('area', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(max_length=50)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driverID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('phoneNumber', models.CharField(max_length=50)),
                ('plateNumber', models.CharField(max_length=50)),
                ('areaCovered', models.CharField(max_length=20, null=True)),
                ('stateCovered', models.CharField(max_length=20)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('categoryID', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('itemType', models.CharField(max_length=50)),
                ('pointsGiven', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('operatorID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('reasonID', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('voucherID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('pointsRequired', models.IntegerField()),
                ('quantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleRequest',
            fields=[
                ('requestID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('weight', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('street', models.CharField(max_length=255, null=True)),
                ('postalCode', models.CharField(max_length=20, null=True)),
                ('area', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('trackingnumber', models.CharField(max_length=200, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.itemcategory')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.driver')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.operator')),
                ('rejectedReason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.reason')),
            ],
        ),
        migrations.CreateModel(
            name='PickedUpRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickedUp_date', models.DateField(auto_now_add=True)),
                ('pickedUp_time', models.TimeField(auto_now_add=True)),
                ('requestID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pickedup_requests', to='database.schedulerequest')),
            ],
        ),
        migrations.CreateModel(
            name='CompletedRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_date', models.DateField(auto_now_add=True)),
                ('completed_time', models.TimeField(auto_now_add=True)),
                ('requestID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='completed_requests', to='database.schedulerequest')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerRedemption',
            fields=[
                ('redemptionID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now=True)),
                ('time', models.TimeField(auto_now=True)),
                ('status', models.BooleanField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.voucher')),
            ],
        ),
    ]
